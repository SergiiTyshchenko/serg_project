<?xml version="1.0" encoding="UTF-8"?>
<!--
 [y] hybris Platform
 Copyright (c) 2000-2014 hybris AG
 All rights reserved.
 This software is the confidential and proprietary information of hybris
 ("Confidential Information"). You shall not disclose such Confidential
 Information and shall use it only in accordance with the terms of the
 license agreement you entered into with hybris.
-->

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:int="http://www.springframework.org/schema/integration"
	xmlns:file="http://www.springframework.org/schema/integration/file"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/integration
		http://www.springframework.org/schema/integration/spring-integration.xsd
		http://www.springframework.org/schema/integration/file
		http://www.springframework.org/schema/integration/file/spring-integration-file.xsd">

	<bean id="baseDirectoryHybris" class="java.lang.String">
		<constructor-arg value="#{baseDirectory}/${tenantId}/hybris" />
	</bean>
	<!-- 1) Scan for files -->
	<file:inbound-channel-adapter id="batchFilesHybris" directory="#{baseDirectoryHybris}"
		filename-regex="^(.*)-(\d+)\.csv" comparator="fileOrderComparator">
		<int:poller fixed-rate="1000" />
	</file:inbound-channel-adapter>

	<!-- 2) move the file to processing and setup header -->
	<file:outbound-gateway request-channel="batchFilesHybris" reply-channel="batchFilesHybrisProc"
		directory="#{baseDirectoryHybris}/processing" delete-source-files="true" />
	<int:service-activator input-channel="batchFilesHybrisProc" output-channel="batchFilesHeaderInit"
		ref="hybrisHeaderSetupTask" method="execute" />
	<bean id="hybrisHeaderSetupTask" class="de.hybris.platform.acceleratorservices.dataimport.batch.task.HeaderSetupTask">
		<property name="catalog" value="hybrisProductCatalog" />
		<property name="net" value="false" />
		<property name="storeBaseDirectory" ref="baseDirectoryHybris" />
	</bean>
	
	<!-- Transformer converters mappings -->
	<bean id="batchOrganisationConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"> 
		  <property name="mapping" value="organisation"/>
		  <property name="converter" ref="batchOrganisationConverter"/>
	</bean>
		  
	<!-- Organisation specific converters -->
	<bean id="batchOrganisationConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				INSERT_UPDATE Organisation;id[unique=true];name;phone;email;
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3}</value>
		</property>
		<property name="type" value="Organisation"/>
	</bean>
	
	<!-- Transformer converters mappings -->
	<bean id="batchMyCustomerConverterMapping" 
		  class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.mapping.impl.DefaultConverterMapping"> 
		  <property name="mapping" value="mycustomer"/>
		  <property name="converter" ref="batchMyCustomerConverter"/>
	</bean>
		  
	<!-- Organisation specific converters -->
	<bean id="batchMyCustomerConverter" class="de.hybris.platform.acceleratorservices.dataimport.batch.converter.impl.DefaultImpexConverter">
		<property name="header">
			<value>
				INSERT_UPDATE MyCustomer;uid[unique=true];Name;status;attemptCount;organisations(id)[collection-delimiter = #];
			</value>
		</property>
		<property name="impexRow">
			<value>;{0};{1};{2};{3};{4}</value>
		</property>
		<property name="type" value="MyCustomer"/>
	</bean>
</beans>